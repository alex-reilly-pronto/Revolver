Array+OnePointCrossoverable.swift
	public func onePointCrossover(generator: EntropyGenerator, other: Array) -> (first: Array, second: Array)
Discrete+Randomizable.swift
	public init(generator: EntropyGenerator)
Randomizable.swift
	init(generator: EntropyGenerator)
NumericType.swift
	func +(lhs: Self, rhs: Self) -> Self
	func -(lhs: Self, rhs: Self) -> Self
	func *(lhs: Self, rhs: Self) -> Self
	func /(lhs: Self, rhs: Self) -> Self
	func %(lhs: Self, rhs: Self) -> Self
	init(_ v: Int)
Bool+Randomizable.swift
	public init(generator: EntropyGenerator)
Double+Randomizable.swift
	public init(generator: EntropyGenerator)
RangeInitializedArray+Mutable.swift
	public func mutate(generator: EntropyGenerator) -> RangeInitializedArray
Float+Randomizable.swift
	public init(generator: EntropyGenerator)
MersenneTwister.swift
	public init(seed: Int)
	public func next() -> Double
RangeInitializedArray+OnePointCrossoverable.swift
	public func onePointCrossover(generator: EntropyGenerator, other: RangeInitializedArray) -> (first: RangeInitializedArray, second: RangeInitializedArray)
ArcGenerator.swift
	public func next() -> Double
DrandGenerator.swift
	public func next() -> Double
